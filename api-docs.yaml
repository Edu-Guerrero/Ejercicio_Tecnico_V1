openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/customers/{id}:
    get:
      tags:
      - customer-controller
      operationId: getCustomerById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cliente"
    put:
      tags:
      - customer-controller
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cliente"
    delete:
      tags:
      - customer-controller
      operationId: deleteCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/v1/accounts/{id}:
    get:
      tags:
      - account-controller
      operationId: getAccountById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cuenta"
    put:
      tags:
      - account-controller
      operationId: updateAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cuenta"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cuenta"
    delete:
      tags:
      - account-controller
      operationId: deleteAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/v1/movements:
    get:
      tags:
      - movement-controller
      operationId: getAllMovements
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movimiento"
    post:
      tags:
      - movement-controller
      operationId: createMovement
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movimiento"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/customers:
    get:
      tags:
      - customer-controller
      operationId: getAllCustomers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cliente"
    post:
      tags:
      - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cliente"
  /api/v1/accounts:
    get:
      tags:
      - account-controller
      operationId: getAllAccounts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cuenta"
    post:
      tags:
      - account-controller
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cuenta"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cuenta"
  /api/v1/movements/{id}:
    get:
      tags:
      - movement-controller
      operationId: getMovementById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Movimiento"
    delete:
      tags:
      - movement-controller
      operationId: deleteMovement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/v1/movements/number/{numeroCuenta}:
    get:
      tags:
      - movement-controller
      operationId: getMovementsByAccountNumber
      parameters:
      - name: numeroCuenta
        in: path
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movimiento"
  /api/v1/movements/account/{cuentaId}:
    get:
      tags:
      - movement-controller
      operationId: getMovementsByAccountId
      parameters:
      - name: cuentaId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movimiento"
  /api/v1/accounts/number/{numeroCuenta}:
    get:
      tags:
      - account-controller
      operationId: getAccountByNumber
      parameters:
      - name: numeroCuenta
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Cuenta"
  /api/v1/accounts/customer/{clienteId}:
    get:
      tags:
      - account-controller
      operationId: getAccountsByCustomerId
      parameters:
      - name: clienteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cuenta"
components:
  schemas:
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        genero:
          type: string
        identificacion:
          type: string
        direccion:
          type: string
        telefono:
          type: string
        contrasena:
          type: string
        estado:
          type: boolean
    Cuenta:
      type: object
      properties:
        id:
          type: integer
          format: int32
        numeroCuenta:
          type: string
        saldo:
          type: number
          format: double
        tipoCuenta:
          type: string
        estado:
          type: boolean
        cliente:
          $ref: "#/components/schemas/Cliente"
    Movimiento:
      type: object
      properties:
        id:
          type: integer
          format: int32
        tipoMovimiento:
          type: string
        valor:
          type: number
          format: double
        saldo:
          type: number
          format: double
        fecha:
          type: string
          format: date-time
